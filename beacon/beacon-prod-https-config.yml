hbase:
    zookeeper:
        hosts:
            - REPLACE_WITH_ZOOKEEPER_SERVERS
        port: 2181
        connectionTimeout: 10s
        sessionTimeout: 10s
        namespace: "/hbase"
    flushInterval: 6s
    incrementBufferSize: 256KB
    maxConcurrentRequests: 1000
    connectionTimeout: 10s
    instrumented: no

http:
    port: 8090
    adminPort: 8091
    connectorType: nonblocking+ssl
    ssl:
        keyStore: /home/ubuntu/.ssh/beacon.keystore
        keyStorePassword: gd3333
    requestLog:
        console:
            enabled: false
        file:
            enabled: true
            currentLogFilename: /var/log/beacon/access-https.log
            archive: true
            archivedLogFilenamePattern: /var/log/beacon/access-https-%d.log.gz
            archivedFileCount: 50

logging:
    console:
        enabled: false
    file:
        enabled: true
        currentLogFilename: /var/log/beacon/service-https.log
        archive: true
        archivedLogFilenamePattern: /var/log/beacon/service-https-%d.log.gz
        archivedFileCount: 50

mysql:
    driverClass: com.mysql.jdbc.Driver
    user: ntropy
    password: 2bc869f70e28759f57561b5303f4883c
    url: jdbc:mysql://54.235.120.143/ntropy
    maxWaitForConnection: 1s
    validationQuery: "/* MyService Health Check */ SELECT distinct 1 FROM metadata_organization"
    minSize: 8
    maxSize: 32
    checkConnectionWhileIdle: false
    checkConnectionHealthWhenIdleFor: 10s
    closeConnectionIfIdleFor: 1 minute

kafka:
    zookeeper:
        hosts:
            - REPLACE_WITH_ZOOKEEPER_SERVERS
        port: 2181
        connectionTimeout: 10s
        sessionTimeout: 10s
        namespace: "/"
    sendBufferSize: 10KB
    connectionTimeout: 5000s
    reconnectInterval: 30000
    maxMessageSize: 1MB
    compression: none
    partitionMissRetries: 3
    async:
        queueTime: 5s
        queueSize: 10000
        batchSize: 2000
    serializerClass: kafka.serializer.StringEncoder

authenticationCachePolicy: maximumSize=10000, expireAfterAccess=10m

